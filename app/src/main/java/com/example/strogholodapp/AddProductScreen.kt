package com.example.strogholodapp

import android.util.Log
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowDropDown
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.unit.dp
import androidx.compose.ui.Alignment
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.sp

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun AddProductScreen(
    padding: PaddingValues = PaddingValues(0.dp),
    onSave: (Product) -> Unit,
    onCancel: () -> Unit
) {
    var name by remember { mutableStateOf("") }
    var price by remember { mutableStateOf("") }
    var description by remember { mutableStateOf("") }
    var photoUrl by remember { mutableStateOf("") }

    val categoriesMap = mapOf(
        "–ë–æ–Ω–µ—Ç—ã" to "Bonety",
        "–õ–∞—Ä–∏" to "Lari",
        "–í–∏—Ç—Ä–∏–Ω—ã" to "Vitriny",
        "–ì–æ—Ä–∫–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ö–æ–ª–æ–¥" to "Gorki_vstroennyj",
        "–ì–æ—Ä–∫–∏ –≤—ã–Ω–æ—Å–Ω–æ–π —Ö–æ–ª–æ–¥" to "Gorki_vynosnoj",
        "–®–∫–∞—Ñ—ã –¥–≤—É—Ö–¥–≤–µ—Ä–Ω—ã–µ" to "Shkafy_dvuhdvernye",
        "–®–∫–∞—Ñ—ã –æ–¥–Ω–æ–¥–≤–µ—Ä–Ω—ã–µ" to "Shkafy_odnodvernye",
        "–ö–∞—Å—Å—ã" to "Kassy",
        "–ö—É—Ö–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ" to "Kuhonnoe_oborudovanie",
        "–°—Ç–µ–ª–ª–∞–∂–∏" to "Stellazhi"
    )

    var expanded by remember { mutableStateOf(false) }
    var selectedCategory by remember { mutableStateOf(categoriesMap.keys.first()) }

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(padding)        // üí° –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –æ—Ç Scaffold
            .padding(16.dp),         // üí° –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞–¥–¥–∏–Ω–≥ —Ñ–æ—Ä–º—ã
        verticalArrangement = Arrangement.spacedBy(12.dp)
    ) {
        Text("–î–æ–±–∞–≤–∏—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", fontSize = 20.sp, fontWeight = FontWeight.Bold)

        OutlinedTextField(
            value = name,
            onValueChange = { name = it },
            label = { Text("–ù–∞–∑–≤–∞–Ω–∏–µ") },
            modifier = Modifier.fillMaxWidth()
        )

        OutlinedTextField(
            value = price,
            onValueChange = { price = it },
            label = { Text("–¶–µ–Ω–∞") },
            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),
            modifier = Modifier.fillMaxWidth()
        )

        OutlinedTextField(
            value = photoUrl,
            onValueChange = { photoUrl = it },
            label = { Text("URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏") },
            modifier = Modifier.fillMaxWidth()
        )

        ExposedDropdownMenuBox(
            expanded = expanded,
            onExpandedChange = { expanded = !expanded }
        ) {
            OutlinedTextField(
                value = selectedCategory,
                onValueChange = {},
                readOnly = true,
                label = { Text("–ö–∞—Ç–µ–≥–æ—Ä–∏—è") },
                trailingIcon = { Icon(Icons.Filled.ArrowDropDown, null) },
                modifier = Modifier
                    .fillMaxWidth()
                    .menuAnchor()
            )
            ExposedDropdownMenu(
                expanded = expanded,
                onDismissRequest = { expanded = false }
            ) {
                categoriesMap.keys.forEach { category ->
                    DropdownMenuItem(
                        text = { Text(category) },
                        onClick = {
                            selectedCategory = category
                            expanded = false
                        }
                    )
                }
            }
        }

        OutlinedTextField(
            value = description,
            onValueChange = { description = it },
            label = { Text("–û–ø–∏—Å–∞–Ω–∏–µ") },
            modifier = Modifier.fillMaxWidth()
        )

        Row(
            horizontalArrangement = Arrangement.spacedBy(12.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Button(onClick = {
                val newProduct = Product(
                    id = 0, // –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º–µ–Ω–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–º
                    name = name,
                    price = price,
                    description = description,
                    photo = photoUrl,
                    category = categoriesMap[selectedCategory] ?: ""
                )
                Log.d("AddProduct", "–°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç: $newProduct")
                onSave(newProduct)
            }) {
                Text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
            }

            OutlinedButton(onClick = onCancel) {
                Text("–û—Ç–º–µ–Ω–∞")
            }
        }
    }
}